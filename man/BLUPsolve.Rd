% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GenEval.R
\name{BLUPsolve}
\alias{BLUPsolve}
\title{BLUP}
\usage{
BLUPsolve(
  y,
  X = NULL,
  FixedEff = NULL,
  Z = NULL,
  VarMat = NULL,
  R = NULL,
  VarComp = NULL,
  TestGroup = NULL,
  verbose = TRUE
)
}
\arguments{
\item{y}{The response variable.}

\item{X}{A matrix of fixed effects.}

\item{FixedEff}{The effects of the fixed effects, if previously estimated or provided.}

\item{Z}{The design matrix (or list of matrices) of the random effects. If all design matrices are an identity, this argument does not need to be provided.}

\item{VarMat}{The variance-covariance matrix (or list of matrices) of the random effects.}

\item{R}{A variance-covariance matrix for the residuals, if they are not independent and identically distributed (i.e. if R != In).}

\item{VarComp}{The variance components of each random effect, including the residuals. If \code{VarComp=NULL}, the function will estimate these variances using REML.}

\item{TestGroup}{The index of observations from a test population. This will make the function perform prediction over these observations.}

\item{verbose}{Logical: should steps of the co,putation be printed on screen?}
}
\value{
\describe{
\item{fixed}{The estimated fixed effects. The first element is always the intercept.}
\item{VarComp}{The estimated variance components for all random effects, and for the residual.}
\item{random}{The predicted random effects.}
\item{Sigma2_BLUP}{The variance-covariance matrix of the parameters estimated/predict with BLUP.}
\item{Rpred}{The accuracy of the prediction performed for \code{TestGroup}.}
}
}
\description{
This function performs BLUP in a mixed model. If not provided, the function will estimate the variance components using REML.
}
\examples{
## SINGLE COMPONENT WITH FIXED EFFECTS ##
# simulate genotypes
M <- simGeno(n=500,AlleleFreq=runif(100,0.05,0.5))
# simulate phenotypes
pheno <- simPheno(M,0.6,Vy=10)
# add fixed effects
X <- cbind(rep(1,nrow(M)),runif(nrow(M)),rbinom(nrow(M),1,0.5))
b <- c(5,-1,2)
y <- pheno$y + as.numeric(X\%*\%b)
# REML
G <- mkGRM(M)
tmp <- REMLsolve(y=y,X=X,VarMat=G)
tmp
# BLUP
aux <- BLUPsolve(y=y,X=X,VarMat=G,VarComp=tmp$VarComp)
str(aux)
# BLUP estimating variance components
aux <- BLUPsolve(y=y,X=X,VarMat=G)
str(aux)

## TWO VARIANCE COMPONENTS ##
# simulate genotypes
M <- simGeno(n=500,AlleleFreq=runif(100,0.05,0.5))
# simulate phenotypes
pheno <- simPheno(list(M[,1:70],M[,71:100]),c(0.4,0.2),Vy=10)
# BLUP using GRMs
G <- list(mkGRM(M[,1:70]),mkGRM(M[,71:100]))
aux <- BLUPsolve(y=pheno$y,VarMat=G)
str(aux)
# prediction
aux <- BLUPsolve(y=pheno$y,VarMat=G,TestGroup=401:500)
str(aux)
# BLUP using genotype matrices
aux <- BLUPsolve(y=pheno$y,VarMat=list(diag(1,70),diag(1,30)),Z=list(M[,1:70],M[,71:100]))
str(aux)
# prediction
aux <- BLUPsolve(y=pheno$y,VarMat=list(diag(1,70),diag(1,30)),Z=list(M[,1:70],M[,71:100]),TestGroup=401:500)
str(aux)
}
\seealso{
\code{\link{REMLsolve}}
}
